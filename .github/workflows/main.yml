name: node

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: false

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
        arch: [x64, arm64]
        include:
          - os: ubuntu-22.04
            arch: x86
          - os: ubuntu-22.04
            arch: arm
          - os: windows-2022
            arch: x86

    steps:
      - name: Install Linux Dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y cmake libgtk-3-dev libnotify-dev libwebkit2gtk-4.0-dev
          sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100
          sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang 100
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Install Linux Cross Compilation Toolchains
        if: startsWith(matrix.os, 'ubuntu') && matrix.arch != 'x64'
        run: sudo apt install -y gcc-multilib g++-multilib

      - name: Install Linux Arm Toolchains
        if: startsWith(matrix.os, 'ubuntu') && startsWith(matrix.arch, 'arm')
        run: sudo apt install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross linux-libc-dev-armhf-cross binutils-aarch64-linux-gnu

      - name: CCache
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: ${{ matrix.arch == 'arm64' && '3G' || '2G' }}
          key: ccache-${{ matrix.os }}-${{ matrix.arch }}

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        env:
          CCACHE_SLOPPINESS: time_macros
        run: |
          node scripts/bootstrap.js --ccache
          node scripts/build.js
